#!/bin/sh

riverctl map normal Super Q close
riverctl map normal Super+Shift Return zoom
riverctl map normal Super F toggle-fullscreen
riverctl map normal Super+Shift F toggle-float
riverctl map normal Super H focus-view left
riverctl map normal Super J focus-view down
riverctl map normal Super K focus-view up
riverctl map normal Super L focus-view right
riverctl map normal Super+Shift H swap left
riverctl map normal Super+Shift J swap down
riverctl map normal Super+Shift K swap up
riverctl map normal Super+Shift L swap right
riverctl map normal Control+Shift H snap left
riverctl map normal Control+Shift J snap down
riverctl map normal Control+Shift K snap up
riverctl map normal Control+Shift L snap right

riverctl map normal Super+Shift Q spawn "prompt 'Quit River? ' 'riverctl exit'"
riverctl map normal Super Backspace spawn "prompt 'Reboot? ' 'sudo reboot'"
riverctl map normal Super+Shift Backspace spawn "prompt 'Shutdown? ' 'sudo shutdown -h now'"
riverctl map normal Super+Alt Backspace spawn "prompt 'Lock? ' 'lock'"
riverctl map normal Super+Alt R spawn "${XDG_CONFIG_HOME}/river/init >/dev/null && notify-send 'River' 'Refreshed'"

riverctl map normal Super Return spawn "$TERMINAL"
riverctl map normal Super R spawn "$TERMINAL lf"
riverctl map normal Super+Shift R spawn menupass
riverctl map normal Super D spawn fuzzel
riverctl map normal Super+Shift D spawn menubm
riverctl map normal Super W spawn "$BROWSER"
riverctl map normal Super+Shift W spawn menunm
riverctl map normal Super E spawn "$TERMINAL neomutt; pkill -RTMIN+4 waybar"
riverctl map normal Super+Shift E spawn menuemoji
riverctl map normal Super A spawn "$TERMINAL pulsemixer"
riverctl map normal Super+Shift A spawn "$TERMINAL -a 'ncmpcpp' ncmpcpp & notify-send 'Ncmpcpp' 'Opened in scratchpad'"
riverctl map normal Super N spawn "$TERMINAL $EDITOR ${HOME}/notes/"
riverctl map normal Super+Shift N spawn "$TERMINAL newsraft"
riverctl map normal Super C spawn menucalc
riverctl map normal Super+Shift C spawn camtoggle
riverctl map normal Super I spawn "$TERMINAL htop"
riverctl map normal Super+Shift I spawn menubt

riverctl map normal None Print spawn "menusc copyshot"
riverctl map normal Shift Print spawn "menusc copyscreen"
riverctl map normal Control+Shift Print spawn menusc
riverctl map normal Super Print spawn menurecord
riverctl map normal Super+Shift Print spawn "menurecord kill"

riverctl map normal None XF86DISPLAY spawn menusc
riverctl map normal None XF86RFKill spawn airplane
riverctl map normal None XF86AudioMedia spawn "$TERMINAL -D ${XDG_DATA_HOME}/dotfiles"

for mode in normal locked; do
	riverctl map -repeat $mode Super Equal spawn "volume high"
	riverctl map -repeat $mode Super Minus spawn "volume low"
	riverctl map $mode Super+Shift Equal spawn "volume higher"
	riverctl map $mode Super+Shift Minus spawn "volume lower"
	riverctl map $mode Super+Shift M spawn "volume mute"
	riverctl map -repeat $mode None XF86AudioRaiseVolume spawn "volume high"
	riverctl map -repeat $mode None XF86AudioLowerVolume spawn "volume low"
	riverctl map $mode None XF86AudioMute spawn "volume mute"
	riverctl map $mode None XF86AudioPlay spawn "mpc -q toggle & pkill -RTMIN+1 waybar"
	riverctl map $mode None XF86AudioPrev spawn "mpc -q prev & pkill -RTMIN+1 waybar"
	riverctl map $mode None XF86AudioNext spawn "mpc -q next & pkill -RTMIN+1 waybar"
	riverctl map $mode None XF86MonBrightnessUp spawn "brightnessctl -qe s +10%"
	riverctl map $mode None XF86MonBrightnessDown spawn "brightnessctl -qe s 10%-"
	riverctl map $mode Super P spawn "mpc -q toggle & pkill -RTMIN+1 waybar"
	riverctl map $mode Super Comma spawn "mpc -q prev & pkill -RTMIN+1 waybar"
	riverctl map $mode Super Period spawn "mpc -q next & pkill -RTMIN+1 waybar"
	riverctl map $mode Super+Alt P spawn "mpc -q clear & pkill -RTMIN+1 waybar"
	riverctl map $mode Super+Shift Comma spawn "mpc -q seek -5% & pkill -RTMIN+1 waybar"
	riverctl map $mode Super+Shift Period spawn "mpc -q seek +5% & pkill -RTMIN+1 waybar"
	riverctl map $mode Super+Alt Comma spawn "mpc -q seek 0% & pkill -RTMIN+1 waybar"
done

riverctl keyboard-layout -options 'caps:ctrl_modifier' 'us'
riverctl set-repeat 50 200

touchpad="pointer-2362-628-PIXA3854:00_093A:0274_Touchpad"
riverctl input $touchpad tap enabled
riverctl input $touchpad drag disabled
riverctl input $touchpad pointer-accel 0.30
riverctl input $touchpad scroll-factor 1.5
riverctl input $touchpad accel-profile adaptive
riverctl input $touchpad natural-scroll enabled
riverctl input $touchpad disable-while-typing enabled
riverctl hide-cursor timeout 5000
riverctl hide-cursor when-typing enabled
riverctl focus-follows-cursor normal
riverctl map-pointer normal Super BTN_LEFT move-view
riverctl map-pointer normal Super+Shift BTN_LEFT resize-view

riverctl rule-add ssd
riverctl background-color "0x1A1B26"
riverctl border-color-focused "0x6C6E75"
riverctl border-color-unfocused "0x665C54"
riverctl border-width 2
riverctl default-layout rivertile
riverctl default-attach-mode bottom

scratchTag=$((1 << 11))
riverctl map normal Super 0 toggle-focused-tags $scratchTag
riverctl map normal Super+Shift 0 set-view-tags $scratchTag
riverctl spawn-tagmask $((((1 << 32) - 1) ^ scratchTag))
riverctl rule-add -app-id "ncmpcpp" tags $scratchTag

stickyTag=$((1 << 10))
riverctl map normal Super S toggle-view-tags $stickyTag
riverctl spawn-tagmask $((((1 << 32) - 1) ^ stickyTag))
riverctl rule-add -app-id "mpv" tags $stickyTag
riverctl rule-add -title "Picture-in-Picture" tags $stickyTag

for i in $(seq 1 9); do
	tags=$((1 << (i - 1)))
	riverctl map normal Super "$i" set-focused-tags $((stickyTag + tags))
	riverctl map normal Super+Shift "$i" set-view-tags $tags
	riverctl map normal Super+Alt "$i" toggle-focused-tags $tags
done

gsettings set "org.gnome.desktop.interface" gtk-theme "Orchis-Dark-Compact"
gsettings set "org.gnome.desktop.interface" icon-theme "Tela-circle-grey-dark"

dbus-update-activation-environment \
	SEATD_SOCK \
	WAYLAND_DISPLAY \
	XDG_CURRENT_DESKTOP=river

executes="rivertile waybar kanshi wlsunset swayidle 
foot pipewire dunst mpd transmission-daemon"

for execute in $executes; do
	pidof -q "$execute" && continue
	case $execute in
	"foot") $execute -s & ;;
	"wlsunset") $execute -s 21:00 -S 07:00 & ;;
	"rivertile") $execute -view-padding 3 -outer-padding 3 & ;;
	"swayidle") $execute -w \
		timeout 300 "lock" timeout 600 "wlopm --off '*'" \
		resume "wlopm --on '*'" before-sleep "lock" & ;;
	*) $execute & ;;
	esac
done >/dev/null 2>&1
